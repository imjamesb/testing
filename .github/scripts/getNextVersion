#!/usr/bin/env -S zx
$.verbose = false;

import getLatestVersion, {
	inc,
	parse,
	valid,
} from "./utils/getLatestVersion.mjs";

let latest = await getLatestVersion();

const arg1 = argv._[1];

switch (arg1) {
	case "major":
	case "minor":
	case "patch":
	case "premajor":
	case "preminor":
	case "prepatch":
	case "prerelease":
		process.stdout.write(
			latest !== null
				? inc(latest, arg1, {
						loose: false,
						includePrerelease: true,
				  })
				: "0.1.0",
		);
		process.exit(0);
		break;
	default:
		if (valid(arg1)) {
			process.stdout.write(
				parse(arg1, { includePrerelease: true, loose: false })
					.version,
			);
			break;
		}
		console.log(
			"Arg 1 must be a valid semver version or valid increment name!",
		);
		process.exit(1);
		break;
}
